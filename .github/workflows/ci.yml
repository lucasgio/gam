name: CI

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable) attempt 1
        id: install_rust_1
        uses: dtolnay/rust-toolchain@stable
        continue-on-error: true

      - name: Install Rust (stable) attempt 2
        if: steps.install_rust_1.outcome != 'success'
        id: install_rust_2
        uses: dtolnay/rust-toolchain@stable
        continue-on-error: true

      - name: Install Rust (stable) attempt 3
        if: steps.install_rust_2.outcome != 'success'
        id: install_rust_3
        uses: dtolnay/rust-toolchain@stable
        continue-on-error: true

      - name: Verify Rust toolchain
        run: rustc -V && cargo -V

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build (release)
        shell: bash
        run: |
          set -e
          for i in 1 2 3; do
            echo "Attempt $i: cargo build"
            if cargo build --release --locked --verbose; then
              break
            fi
            echo "Retrying in 15s..." && sleep 15
          done

